{"ast":null,"code":"var _jsxFileName = \"C:\\\\divmelodies\\\\src\\\\components\\\\podcastcomponent.js\",\n  _s = $RefreshSig$();\n// PodcastComponent.js\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PodcastComponent = ({\n  podcasts,\n  episodes\n}) => {\n  _s();\n  const {\n    podcastId\n  } = useParams();\n  const selectedPodcast = podcasts.find(podcast => podcast.id === parseInt(podcastId, 10));\n  if (!selectedPodcast) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Podcast non trouv\\xE9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: selectedPodcast.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: selectedPodcast.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\xC9pisodes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: episodes.filter(episode => selectedPodcast.episodes.includes(episode.id)).map(episode => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: episode.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: episode.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }, this)]\n      }, episode.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(PodcastComponent, \"tYh1ViG68mcLo9Dx7swOFW/Eeg8=\", false, function () {\n  return [useParams];\n});\n_c = PodcastComponent;\nexport default PodcastComponent;\nvar _c;\n$RefreshReg$(_c, \"PodcastComponent\");","map":{"version":3,"names":["React","useParams","jsxDEV","_jsxDEV","PodcastComponent","podcasts","episodes","_s","podcastId","selectedPodcast","find","podcast","id","parseInt","children","fileName","_jsxFileName","lineNumber","columnNumber","title","description","filter","episode","includes","map","_c","$RefreshReg$"],"sources":["C:/divmelodies/src/components/podcastcomponent.js"],"sourcesContent":["// PodcastComponent.js\r\nimport React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst PodcastComponent = ({ podcasts, episodes }) => {\r\n  const { podcastId } = useParams();\r\n  const selectedPodcast = podcasts.find(podcast => podcast.id === parseInt(podcastId, 10));\r\n\r\n  if (!selectedPodcast) {\r\n    return <p>Podcast non trouvé</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>{selectedPodcast.title}</h2>\r\n      <p>{selectedPodcast.description}</p>\r\n\r\n      <h3>Épisodes</h3>\r\n      <ul>\r\n        {episodes\r\n          .filter(episode => selectedPodcast.episodes.includes(episode.id))\r\n          .map(episode => (\r\n            <li key={episode.id}>\r\n              <h4>{episode.title}</h4>\r\n              <p>{episode.description}</p>\r\n              {/* Ajoutez ici le lecteur audio ou d'autres informations spécifiques à l'épisode */}\r\n            </li>\r\n          ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PodcastComponent;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACnD,MAAM;IAAEC;EAAU,CAAC,GAAGP,SAAS,CAAC,CAAC;EACjC,MAAMQ,eAAe,GAAGJ,QAAQ,CAACK,IAAI,CAACC,OAAO,IAAIA,OAAO,CAACC,EAAE,KAAKC,QAAQ,CAACL,SAAS,EAAE,EAAE,CAAC,CAAC;EAExF,IAAI,CAACC,eAAe,EAAE;IACpB,oBAAON,OAAA;MAAAW,QAAA,EAAG;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAClC;EAEA,oBACEf,OAAA;IAAAW,QAAA,gBACEX,OAAA;MAAAW,QAAA,EAAKL,eAAe,CAACU;IAAK;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChCf,OAAA;MAAAW,QAAA,EAAIL,eAAe,CAACW;IAAW;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEpCf,OAAA;MAAAW,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBf,OAAA;MAAAW,QAAA,EACGR,QAAQ,CACNe,MAAM,CAACC,OAAO,IAAIb,eAAe,CAACH,QAAQ,CAACiB,QAAQ,CAACD,OAAO,CAACV,EAAE,CAAC,CAAC,CAChEY,GAAG,CAACF,OAAO,iBACVnB,OAAA;QAAAW,QAAA,gBACEX,OAAA;UAAAW,QAAA,EAAKQ,OAAO,CAACH;QAAK;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACxBf,OAAA;UAAAW,QAAA,EAAIQ,OAAO,CAACF;QAAW;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAFrBI,OAAO,CAACV,EAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIf,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACX,EAAA,CA3BIH,gBAAgB;EAAA,QACEH,SAAS;AAAA;AAAAwB,EAAA,GAD3BrB,gBAAgB;AA6BtB,eAAeA,gBAAgB;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}