{"ast":null,"code":"var _jsxFileName = \"C:\\\\divmelodies\\\\src\\\\components\\\\PodcastList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EpisodeList({\n  podcasts\n}) {\n  _s();\n  const {\n    podcastId\n  } = useParams();\n  const selectedPodcast = podcasts.find(podcast => podcast.id === parseInt(podcastId, 10));\n  const [isPlaying, setIsPlaying] = useState({});\n  const audioRefs = {}; // Références aux éléments audio\n\n  if (!selectedPodcast) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Podcast non trouv\\xE9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }, this);\n  }\n  const togglePlay = episodeId => {\n    // Mise à jour de l'état de lecture\n    setIsPlaying(prevIsPlaying => ({\n      ...prevIsPlaying,\n      [episodeId]: !prevIsPlaying[episodeId]\n    }));\n\n    // Récupération de l'élément audio correspondant\n    const audio = audioRefs[episodeId];\n\n    // Toggle play/pause de l'élément audio\n    if (audio.paused) {\n      audio.play();\n    } else {\n      audio.pause();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Liste des \\xC9pisodes pour le Podcast \", selectedPodcast.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: selectedPodcast.episodes.map(episode => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: episode.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: episode.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n            ref: ref => audioRefs[episode.id] = ref,\n            controls: true,\n            children: [/*#__PURE__*/_jsxDEV(\"source\", {\n              src: episode.audioSrc,\n              type: \"audio/mp3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this), \"Votre navigateur ne supporte pas l'audio HTML5.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => togglePlay(episode.id),\n            children: isPlaying[episode.id] ? 'Pause' : 'Play'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, episode.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(EpisodeList, \"avPc8O1S7rJ4ib+J3gTLE3row68=\", false, function () {\n  return [useParams];\n});\n_c = EpisodeList;\nexport default EpisodeList;\nvar _c;\n$RefreshReg$(_c, \"EpisodeList\");","map":{"version":3,"names":["React","useState","useRef","useParams","jsxDEV","_jsxDEV","EpisodeList","podcasts","_s","podcastId","selectedPodcast","find","podcast","id","parseInt","isPlaying","setIsPlaying","audioRefs","children","fileName","_jsxFileName","lineNumber","columnNumber","togglePlay","episodeId","prevIsPlaying","audio","paused","play","pause","title","episodes","map","episode","description","ref","controls","src","audioSrc","type","onClick","_c","$RefreshReg$"],"sources":["C:/divmelodies/src/components/PodcastList.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nfunction EpisodeList({ podcasts }) {\r\n  const { podcastId } = useParams();\r\n  const selectedPodcast = podcasts.find((podcast) => podcast.id === parseInt(podcastId, 10));\r\n\r\n  const [isPlaying, setIsPlaying] = useState({});\r\n  const audioRefs = {}; // Références aux éléments audio\r\n\r\n  if (!selectedPodcast) {\r\n    return <div>Podcast non trouvé</div>;\r\n  }\r\n\r\n  const togglePlay = (episodeId) => {\r\n    // Mise à jour de l'état de lecture\r\n    setIsPlaying((prevIsPlaying) => ({\r\n      ...prevIsPlaying,\r\n      [episodeId]: !prevIsPlaying[episodeId],\r\n    }));\r\n\r\n    // Récupération de l'élément audio correspondant\r\n    const audio = audioRefs[episodeId];\r\n\r\n    // Toggle play/pause de l'élément audio\r\n    if (audio.paused) {\r\n      audio.play();\r\n    } else {\r\n      audio.pause();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Liste des Épisodes pour le Podcast {selectedPodcast.title}</h2>\r\n      <ul>\r\n        {selectedPodcast.episodes.map((episode) => (\r\n          <li key={episode.id}>\r\n            <h3>{episode.title}</h3>\r\n            <p>{episode.description}</p>\r\n            <div>\r\n              <audio ref={(ref) => (audioRefs[episode.id] = ref)} controls>\r\n                <source src={episode.audioSrc} type=\"audio/mp3\" />\r\n                Votre navigateur ne supporte pas l'audio HTML5.\r\n              </audio>\r\n              <button onClick={() => togglePlay(episode.id)}>\r\n                {isPlaying[episode.id] ? 'Pause' : 'Play'}\r\n              </button>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EpisodeList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}