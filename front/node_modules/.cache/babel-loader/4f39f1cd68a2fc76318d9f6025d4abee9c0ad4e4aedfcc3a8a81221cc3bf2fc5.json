{"ast":null,"code":"var _jsxFileName = \"C:\\\\divmelodies\\\\src\\\\components\\\\podcastcomponent.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { podcastsData } from '../pages/data';\nimport AudioPlayer from './AudioPlayer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PodcastComponent() {\n  _s();\n  const {\n    podcastId\n  } = useParams();\n\n  // Recherche du podcast avec l'id correspondant\n  const podcast = podcastsData.find(podcast => podcast.id.toString() === podcastId);\n  if (!podcast) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Podcast non trouv\\xE9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: podcast.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: podcast.image,\n      alt: podcast.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\xC9pisodes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: podcast.episodes.map(episode => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: episode.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: episode.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(AudioPlayer, {\n          audioSrc: episode.audioSrc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)]\n      }, episode.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: \"Retour \\xE0 l'accueil\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(PodcastComponent, \"tYh1ViG68mcLo9Dx7swOFW/Eeg8=\", false, function () {\n  return [useParams];\n});\n_c = PodcastComponent;\nexport default PodcastComponent;\nvar _c;\n$RefreshReg$(_c, \"PodcastComponent\");","map":{"version":3,"names":["React","Link","useParams","podcastsData","AudioPlayer","jsxDEV","_jsxDEV","PodcastComponent","_s","podcastId","podcast","find","id","toString","children","fileName","_jsxFileName","lineNumber","columnNumber","title","src","image","alt","episodes","map","episode","description","audioSrc","to","_c","$RefreshReg$"],"sources":["C:/divmelodies/src/components/podcastcomponent.js"],"sourcesContent":["import React from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { podcastsData } from '../pages/data';\r\nimport AudioPlayer from './AudioPlayer';\r\n\r\nfunction PodcastComponent() {\r\n  const { podcastId } = useParams();\r\n\r\n  // Recherche du podcast avec l'id correspondant\r\n  const podcast = podcastsData.find(podcast => podcast.id.toString() === podcastId);\r\n\r\n  if (!podcast) {\r\n    return <div>Podcast non trouvé</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>{podcast.title}</h2>\r\n      <img src={podcast.image} alt={podcast.title} />\r\n\r\n      <h3>Épisodes</h3>\r\n      <ul>\r\n        {podcast.episodes.map(episode => (\r\n          <li key={episode.id}>\r\n            <h4>{episode.title}</h4>\r\n            <p>{episode.description}</p>\r\n            <AudioPlayer audioSrc={episode.audioSrc} />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      <Link to=\"/\">Retour à l'accueil</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PodcastComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,SAAS,QAAQ,kBAAkB;AAClD,SAASC,YAAY,QAAQ,eAAe;AAC5C,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAM;IAAEC;EAAU,CAAC,GAAGP,SAAS,CAAC,CAAC;;EAEjC;EACA,MAAMQ,OAAO,GAAGP,YAAY,CAACQ,IAAI,CAACD,OAAO,IAAIA,OAAO,CAACE,EAAE,CAACC,QAAQ,CAAC,CAAC,KAAKJ,SAAS,CAAC;EAEjF,IAAI,CAACC,OAAO,EAAE;IACZ,oBAAOJ,OAAA;MAAAQ,QAAA,EAAK;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACtC;EAEA,oBACEZ,OAAA;IAAAQ,QAAA,gBACER,OAAA;MAAAQ,QAAA,EAAKJ,OAAO,CAACS;IAAK;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACxBZ,OAAA;MAAKc,GAAG,EAAEV,OAAO,CAACW,KAAM;MAACC,GAAG,EAAEZ,OAAO,CAACS;IAAM;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAE/CZ,OAAA;MAAAQ,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBZ,OAAA;MAAAQ,QAAA,EACGJ,OAAO,CAACa,QAAQ,CAACC,GAAG,CAACC,OAAO,iBAC3BnB,OAAA;QAAAQ,QAAA,gBACER,OAAA;UAAAQ,QAAA,EAAKW,OAAO,CAACN;QAAK;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACxBZ,OAAA;UAAAQ,QAAA,EAAIW,OAAO,CAACC;QAAW;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC5BZ,OAAA,CAACF,WAAW;UAACuB,QAAQ,EAAEF,OAAO,CAACE;QAAS;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA,GAHpCO,OAAO,CAACb,EAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIf,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eAELZ,OAAA,CAACL,IAAI;MAAC2B,EAAE,EAAC,GAAG;MAAAd,QAAA,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEV;AAACV,EAAA,CA7BQD,gBAAgB;EAAA,QACDL,SAAS;AAAA;AAAA2B,EAAA,GADxBtB,gBAAgB;AA+BzB,eAAeA,gBAAgB;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}