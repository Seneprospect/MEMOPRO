{"ast":null,"code":"var _jsxFileName = \"C:\\\\divmelodies\\\\src\\\\components\\\\podcastcomponent.js\";\n// PodcastComponent.js\nimport React, { useState } from 'react';\nimport { Podcast } from './data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PodcastComponent = ({\n  podcasts,\n  episodes,\n  match\n}) => {\n  var _match$params;\n  const podcastId = match === null || match === void 0 ? void 0 : (_match$params = match.params) === null || _match$params === void 0 ? void 0 : _match$params.podcastId;\n\n  // Trouver le podcast correspondant à l'ID\n  const selectedPodcast = podcasts.find(podcast => podcast.id === parseInt(podcastId));\n  if (!selectedPodcast) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Podcast non trouv\\xE9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: selectedPodcast.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: selectedPodcast.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\xC9pisodes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: selectedPodcast.episodes.map(episode => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: episode.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: episode.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n          controls: true,\n          children: [/*#__PURE__*/_jsxDEV(\"source\", {\n            src: episode.audioUrl,\n            type: \"audio/mpeg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this), \"Votre navigateur ne supporte pas l'audio HTML5.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this)]\n      }, episode.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_c = PodcastComponent;\nexport default PodcastComponent;\nvar _c;\n$RefreshReg$(_c, \"PodcastComponent\");","map":{"version":3,"names":["React","useState","Podcast","jsxDEV","_jsxDEV","PodcastComponent","podcasts","episodes","match","_match$params","podcastId","params","selectedPodcast","find","podcast","id","parseInt","children","fileName","_jsxFileName","lineNumber","columnNumber","title","description","map","episode","controls","src","audioUrl","type","_c","$RefreshReg$"],"sources":["C:/divmelodies/src/components/podcastcomponent.js"],"sourcesContent":["// PodcastComponent.js\r\nimport React, { useState } from 'react';\r\nimport { Podcast } from './data';\r\n\r\nconst PodcastComponent = ({ podcasts, episodes, match }) => {\r\n  const podcastId = match?.params?.podcastId;\r\n\r\n  // Trouver le podcast correspondant à l'ID\r\n  const selectedPodcast = podcasts.find(podcast => podcast.id === parseInt(podcastId));\r\n\r\n  if (!selectedPodcast) {\r\n    return <div>Podcast non trouvé</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>{selectedPodcast.title}</h2>\r\n      <p>{selectedPodcast.description}</p>\r\n\r\n      <h3>Épisodes</h3>\r\n      <ul>\r\n        {selectedPodcast.episodes.map(episode => (\r\n          <li key={episode.id}>\r\n            <h4>{episode.title}</h4>\r\n            <p>{episode.description}</p>\r\n            <audio controls>\r\n              <source src={episode.audioUrl} type=\"audio/mpeg\" />\r\n              Votre navigateur ne supporte pas l'audio HTML5.\r\n            </audio>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PodcastComponent;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,OAAO,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,QAAQ;EAAEC;AAAM,CAAC,KAAK;EAAA,IAAAC,aAAA;EAC1D,MAAMC,SAAS,GAAGF,KAAK,aAALA,KAAK,wBAAAC,aAAA,GAALD,KAAK,CAAEG,MAAM,cAAAF,aAAA,uBAAbA,aAAA,CAAeC,SAAS;;EAE1C;EACA,MAAME,eAAe,GAAGN,QAAQ,CAACO,IAAI,CAACC,OAAO,IAAIA,OAAO,CAACC,EAAE,KAAKC,QAAQ,CAACN,SAAS,CAAC,CAAC;EAEpF,IAAI,CAACE,eAAe,EAAE;IACpB,oBAAOR,OAAA;MAAAa,QAAA,EAAK;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACtC;EAEA,oBACEjB,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAKL,eAAe,CAACU;IAAK;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChCjB,OAAA;MAAAa,QAAA,EAAIL,eAAe,CAACW;IAAW;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEpCjB,OAAA;MAAAa,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBjB,OAAA;MAAAa,QAAA,EACGL,eAAe,CAACL,QAAQ,CAACiB,GAAG,CAACC,OAAO,iBACnCrB,OAAA;QAAAa,QAAA,gBACEb,OAAA;UAAAa,QAAA,EAAKQ,OAAO,CAACH;QAAK;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACxBjB,OAAA;UAAAa,QAAA,EAAIQ,OAAO,CAACF;QAAW;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC5BjB,OAAA;UAAOsB,QAAQ;UAAAT,QAAA,gBACbb,OAAA;YAAQuB,GAAG,EAAEF,OAAO,CAACG,QAAS;YAACC,IAAI,EAAC;UAAY;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,mDAErD;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA,GANDI,OAAO,CAACV,EAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOf,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACS,EAAA,GA9BIzB,gBAAgB;AAgCtB,eAAeA,gBAAgB;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}